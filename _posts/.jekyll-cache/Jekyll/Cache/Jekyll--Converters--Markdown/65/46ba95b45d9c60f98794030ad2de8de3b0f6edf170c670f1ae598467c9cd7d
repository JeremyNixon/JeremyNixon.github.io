I"à
<h2 class="post-title">Algorithmic Thinking</h2>
<div class="alg">
<p>
We see the same type of problems with the same type of structure over and over again. Algorithmic thinking is creating a little process that lets us bring our best ideas to bear on the situation consistently. 
</p><p>
As an example, take decision making. Each time I make a choice, I have an opportunity to improve my choice through a simple algorithm. For example:
</p>
<ol><li>
	What are the goals underlying this decision? Can I achieve those goals through other methods?
	</li><li>
	What would my most courageous self do? My most rational self? What would the people I respect do?
	</li><li>
	Imagine that some of the options are eliminated or required. What would I do then?
	</li>
</ol>

<p>
Asking these three questions in front of each decision will improve decision quality dramatically. The cost to doing it is made up for in spades by the improvement in direction.
</p><p>
The ideal outcome is that it stops being work to think through - it begins to happen automatically, as you consider any decision. And so by assimilating patterns of thought you become a better thinker.
</p><p>
This was a short example, but you can imagine having a process or algorithm that you run thatâ€™s much longer. Hereâ€™s an example for short-term productivity hacks.
</p>

<ol>
<li>
Environment - Set yourself up in a space when you know you will act consistently with what you care about (or, inverting, ensure that you avoid distraction) 
</li><li>
Write Out Simple First Steps (Getting Things Done style, make each first step as simplistic as possible to lower activation energy to acting).
</li><li>
Time Limits - set yourself a very specific goal and set out to achieve it completely within a time constraint.
</li><li>
Pomodoro (25 minutes on, 5 minute break)
</li><li>
Time track (record your behavior) in real time.
</li><li>
Knock out simple tasks immediately and as they come (2 minute rule).
</li>
</ol>

<p>
Running this type of algorithm when you feel like you lack motivation or even whenever you decide how to work will lead to a boost. And so eventually you make the principles into habits that lead to longer term improvements.
</p><p>
Specialization means that you probably see a particular type of problem really often. Writing your own short (or longer) algorithms for those problems is one easy way to dramatically improve the quality of your behavior. 
</p><p>
You start to find that if you want to accomplish any task, writing an algorithm for it is quite easy. The difficult part becomes behaving in a way thatâ€™s aligned with your idea. But the thinking can often be quite easy - getting used to thinking algorithmically can free up mental resources (attention and worry) as well. 
</p>
</div>
:ET